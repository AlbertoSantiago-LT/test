
Cambiar el nombre de un repositorio **clonado localmente** en Git es muy f√°cil, pero es importante distinguir **qu√© quieres cambiar exactamente**:

## ‚úÖ OPCI√ìN 1: Cambiar el **nombre de la carpeta local**

Esto **no afecta al repositorio en GitHub, GitLab o CodeCommit**, solo a tu m√°quina.

```bash
mv nombre-actual nuevo-nombre
```

Por ejemplo:

```bash
mv mi-repo-clonado mi-repo-renombrado
```

Despu√©s puedes entrar a la carpeta con:

```bash
cd mi-repo-renombrado
```

---

## ‚úÖ OPCI√ìN 2: Cambiar el nombre del **repositorio remoto (origin)**

Si quieres que tu repositorio local apunte a un **nuevo repositorio remoto** (por ejemplo, si cambiaste el nombre en GitHub o CodeCommit), haz esto:

### 1. Ver la URL actual del remoto:

```bash
git remote -v
```

Ver√°s algo como:

```
origin  https://git-codecommit.us-east-1.amazonaws.com/v1/repos/mi-repo (fetch)
origin  https://git-codecommit.us-east-1.amazonaws.com/v1/repos/mi-repo (push)
```

### 2. Cambiar la URL del repositorio remoto:

```bash
git remote set-url origin NUEVA_URL
```

Ejemplo con AWS CodeCommit:

```bash
git remote set-url origin https://git-codecommit.us-east-1.amazonaws.com/v1/repos/nuevo-nombre-repo
```

---

## üßº (Opcional) Verifica que se actualiz√≥ correctamente:

```bash
git remote -v
```

---


